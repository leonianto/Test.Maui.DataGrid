<?xml version="1.0" encoding="utf-8"?>
<ContentView x:Name="self"
      xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
      xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
      xmlns:local="clr-namespace:Maui.DataGrid;assembly=Maui.DataGrid"
      x:Class="Maui.DataGrid.DataGrid"
      x:DataType="local:DataGrid"
      CompressedLayout.IsHeadless="True">
    <ContentView.Resources>
        <ResourceDictionary>
            
            <!--Default Header Style-->
            <Style x:Key="DefaultHeaderStyle" TargetType="Label">
                <Setter Property="FontAttributes" Value="Bold" />
                <Setter Property="HorizontalOptions" Value="Center" />
                <Setter Property="VerticalOptions" Value="Center" />
                <Setter Property="TextColor" Value="Black" />
                <Setter Property="LineBreakMode" Value="TailTruncation" />
            </Style>
            <!--Default Sort Icon Style-->
            <Style x:Key="DefaultSortIconStyle" TargetType="Polygon">
                <Setter Property="Aspect" Value="Uniform" />
                <Setter Property="Fill" Value="Black" />
                <Setter Property="Points" Value="50,0 0,80 100,80" />
                <Setter Property="Margin" Value="0,0,3,0" />
            </Style>
            <!--Pagination Stepper Style-->
            <Style x:Key="PaginationStepperStyle" TargetType="Stepper">
                <Setter Property="Margin" Value="5" />
            </Style>
        </ResourceDictionary>
    </ContentView.Resources>
    <Grid CompressedLayout.IsHeadless="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <ImageButton  Grid.Row="0" Grid.Column="0"
                      ScaleX="0.5" ScaleY="0.5"
                      x:Name="DGUserPreferences"
                      HeightRequest="{Binding HeaderHeight, Source={Reference self}}"
                      Source="gear.png"
                      BackgroundColor="White"                    
                      AnchorX="0.49"
                      AnchorY="0.49"
                      Clicked="DataGridUserPreferencesClick"/>
        <Grid  Grid.Row="0" Grid.Column="1"  x:Name="_headerView" HeightRequest="{Binding HeaderHeight, Source={Reference self}}" />
        <BoxView x:Name="HideBox" Grid.Row="1" Grid.Column="1"  Color="White" WidthRequest="28" IsVisible="False" ZIndex="5" HorizontalOptions="Start"></BoxView>
        <RefreshView Grid.Row="1" Grid.Column="1"  x:Name="_refreshView" Grid.RowSpan="2" Command="{Binding PullToRefreshCommand, Source={Reference self}}"
                     IsRefreshing="{Binding IsRefreshing, Source={x:Reference self}, Mode=TwoWay}" IsEnabled="{Binding RefreshingEnabled, Source={Reference self}}">
            <!--  Remove ContentView when this pull request is merged https://github.com/dotnet/maui/pull/14302  -->
            <ContentView>
                <!--  Set all platforms to use MeasureFirstItem when this bug is resolved https://github.com/dotnet/maui/issues/7562  -->
                <CollectionView
                    x:Name="_collectionView"
                    WidthRequest="{Binding WidthRequest, Source={Reference self}, Mode=TwoWay}"
                    BackgroundColor="{Binding BorderColor, Source={Reference self}, Mode=TwoWay}"
                    SelectedItem="{Binding SelectedItem, Source={Reference self}, Mode=TwoWay}"
                    SelectedItems="{Binding SelectedItems, Source={Reference self}, Mode=TwoWay}"
                    ItemSizingStrategy="{Binding ItemSizingStrategy, Source={Reference self}, Mode=TwoWay}"
                    CanReorderItems="{Binding CanReorderItems, Source={Reference self}, Mode=TwoWay}"
                    SelectionMode="{Binding SelectionMode, Source={Reference self}, Mode=TwoWay}" >
                    <CollectionView.ItemTemplate >
                        <DataTemplate>
                            <local:DataGridRow x:Name="DataGridRow"  DataGrid="{Reference self}" HeightRequest="{Binding RowHeight, Source={Reference self}, Mode=OneTime}"/>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>

                </CollectionView>
            </ContentView>
        </RefreshView>
        <Grid Grid.Row="2" Grid.Column="1" x:Name="_footerView" IsVisible="{Binding PaginationEnabled, Source={Reference self}}" HeightRequest="{Binding FooterHeight, Source={Reference self}}" BackgroundColor="{Binding FooterBackground, Source={Reference self}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <HorizontalStackLayout VerticalOptions="Center" IsVisible="{Binding PageSizeVisible, Source={Reference self}}">
                <Label Text="# per page:" Margin="5,0,0,0" VerticalTextAlignment="Center" TextColor="Black" />
                <Picker ItemsSource="{Binding PageSizeList, Source={Reference self}, Mode=OneTime}" SelectedItem="{Binding PageSize, Source={Reference self}}" TextColor="Black" />
            </HorizontalStackLayout>
            <HorizontalStackLayout Grid.Column="2" VerticalOptions="Center">
                <Label Text="Page:" Margin="0,0,5,0" VerticalTextAlignment="Center" TextColor="Black" />
                <Label Text="{Binding PageNumber, Source={Reference self}}" VerticalTextAlignment="Center" TextColor="Black" />
                <Stepper x:Name="_paginationStepper" Value="{Binding PageNumber, Source={x:Reference self}}" Style="{StaticResource PaginationStepperStyle}" Minimum="0" />
            </HorizontalStackLayout>
        </Grid>
    </Grid>
</ContentView>
